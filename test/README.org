** Creating ntuples from MC or data without doing any Re-Reco (dumping)

    - MC
    #+BEGIN_EXAMPLE
    cmsenv
    voms-proxy-init --voms cms
    cmsRun Dump_MC_cfg.py inputFiles=/store/mc/RunIISpring18MiniAOD/ZToEE_NNPDF30_13TeV-powheg_M_50_120/MINIAODSIM/NZSPU40to70_100X_upgrade2018_realistic_v10-v2/70000/24A70308-1124-E811-9609-0CC47A4D769E.root outputFile=output.root
    #+END_EXAMPLE

    - Data
    #+BEGIN_EXAMPLE
    cmsenv
    voms-proxy-init --voms cms
    cmsRun Dump_DATA_cfg.py inputFiles=/store/data/Run2018A/EGamma/MINIAOD/PromptReco-v1/000/315/257/00000/6AB583CF-4D4B-E811-BE94-FA163EFC4E1B.root outputFile=output.root
    #+END_EXAMPLE

    - Note:
    
        - Dump_DATA_cfg.py is created using the following cmsDriver command
        #+BEGIN_EXAMPLE
         cmsDriver.py reco -s RAW2DIGI,L1Reco,RECO --conditions 101X_dataRun2_Prompt_v9 --data --filein=/store/data/Run2018A/EGamma/MINIAOD/PromptReco-v1/000/315/257/00000/6AB583CF-4D4B-E811-BE94-FA163EFC4E1B.root
        #+END_EXAMPLE
        and then changing the process.schedule line as shown [[https://github.com/NEUAnalyses/EcalAlignment/blob/forAmrutha/test/Dump_DATA_cfg.py#L253][here]]
        
        - The steps given above dump data/MC from a single data/MC root file. In reality, we need to have approximately 100 - 200 pb-1 of integrated luminosity so that the alignment coefficients obtained are not affected by statistical fluctuations. 
        - Use the above steps to verify that the ntuples are created properly and then submit crab jobs to dump data from several files.
        - See miscellaneous section to know how to find the integrated luminosity of different runs in a dataset.
        - See README in the crab directory to know how to submit CRAB jobs. 
        
** Get MC bias values for EB+, EB-, EE+ and EE-

#+BEGIN_EXAMPLE
cd plot/
root -l drawModulesMC.cxx\(\"root:/path/to/MC/root/file.root\",\"output_directory_name\"\)
eg: root -l drawModulesMC.cxx\(\"root:///afs/cern.ch/user/a/amkrishn/private/ECAL_Alignment/MC/MC_2018_small.root\",\"MC_bias_values\"\)
#+END_EXAMPLE

- Update the MC bias values for EB+, EB-, EE+ and EE- in align/AlignEB_Zee_cfg.py and align/AlignEE_Zee_cfg.py before proceeding to the next step.

** Get alignment coefficients out of the trees created in the previous step

   - \chi^{2} minimization procedure is done for each supermodule (SM) in the ECAL barrel (EB) and each Dee in the ECAL endcap (EE)
   - There are 2 separate scripts for EB and EE. Both of them take the SM number and Dee number as an input argument. This allows us to perform the minimization in parallel across all of the ECAL elements.
   - This process can be done individually for each SM and Dee as follows:
   #+BEGIN_EXAMPLE
   EB_Alignment_RotoTraslation_singleSM     align/AlignEB_Zee_cfg.py  <iSM> (iSM ranges from 0 to 35)
   EE_Alignment_RotoTraslation_singleSM     align/AlignEE_Zee_cfg.py  <iDee> (iDee ranges from 0 to 3)

   Eg: To run minimization on iSM=0: EB_Alignment_RotoTraslation_singleSM     align/AlignEB_Zee_cfg.py  0
   Eg: To run minimization on iDee=0: EE_Alignment_RotoTraslation_singleSM     align/AlignEE_Zee_cfg.py  0
   #+END_EXAMPLE
   - The process can also be done all at once using [[file:align/doAlign.py][this]] script as follows. This will run the minimization process on each SM and Dee and combine the different output txt files into one txt file.
   #+BEGIN_EXAMPLE
   python align/doAlign.py -o <output file extension> -r <region>

   Eg: python align/doAlign.py -o Run3 -r EB
       python align/doAlign.py -o Run3 -r EE
       python align/doAlign.py -o Run3 -r All
   Make sure that the output txt files look sensible. For eg: the combined txt file for EB should have 36 rows and for EE should have four rows.
   #+END_EXAMPLE

** Combine alignment coefficients with previous alignment coefficients
   - CombineRotoTraslations   <previous alignment txt file>    <new alignment txt file obtained in previous step>    <output new txt file>

   #+BEGIN_EXAMPLE
    CombineRotoTraslations   myEBAlignment_2018.txt  myEBAlignment_Run3.txt  myEBAlignment_Run3_NewConditions.txt
    CombineRotoTraslations   myEEAlignment_2018.txt  myEEAlignment_Run3.txt  myEEAlignment_Run3_NewConditions.txt
   #+END_EXAMPLE

** Create local sqlite db
#+BEGIN_EXAMPLE
  cmsRun dbEcalAlignment/copyFileAlignEB_cfg.py
  cmsRun dbEcalAlignment/copyFileAlignEE_cfg.py
#+END_EXAMPLE

- Make sure to save the txt files with the alignment coefficients and the .db files somewhere. They should be provided to AlcaDB.
