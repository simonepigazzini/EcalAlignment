* EcalAlignment

** Documentation

    - CMS ECAL Alignment in LHC Run 1: [[https://cms.cern.ch/iCMS/user/noteinfo?cmsnoteid=CMS%20AN-2013/328][Note Link]]
    - CMS ECAL Alignment in LHC Run 2: [[https://cms.cern.ch/iCMS/user/noteinfo?cmsnoteid=CMS%20DN-2015/026][Note Link]]

** Installation

#+BEGIN_EXAMPLE

cmsrel CMSSW_12_4_6 <The CMSSW version will change depending on when alignment is being performed>
cd CMSSW_12_4_6/src/
mkdir EcalValidation
cd EcalValidation
git clone -b CMSSW_12_4_6 git@github.com:NEUAnalyses/EcalAlignment.git

cmsenv
scramv1 b -j 8 -Werror=unused-variable

#+END_EXAMPLE


** Alignment requirement

   - ECAL alignment procedure is performed to ensure that ECAL is aligned w.r.t the tracker detector. For eg. the ECAL and tracker detector can be considered aligned with each other when the position of the electron track in the tracker detector, when extrapolated to ECAL, is very close to that electron's energy deposit in ECAL.
   - This procedure is required to be performed for multiple reasons:
     - During LHC shutdown, the CMS detector is opened for repair, upgrade work etc. This can physically move the detectors. In such scenarios the alignment procedure should be performed.
     - The tracker detector might introduce some changes in their reconstruction. In that case it should be checked if ECAL is still aligned with the tracker.

** Alignment procedure

*** Step1: Create ntuples from data/MC files

   - Z \rightarrow ee events are used for the alignment procedure.
   - [[file:src/EcalAlignment.cc][This]] script creates Z candidates from good quality electrons. This script can be used in 2 different ways:
     - Dump information from the input files
     - Perform Re-Reco and then create ntuples

*** Step2: Derive MC bias values of ∆φ and ∆η along η
    - ∆η and ∆φ distributions in MC have a small bias along η because of the interplay between bending of electrons in the magnetic field and the tilt of crystals in SM. See run 1 documentation for more information on this.
    - Use [[file:test/plot/drawModulesMC.cxx][this]] script to obtain these values and update /test/align/AlignEB_Zee_cfg.py and test/align/AlignEE_Zee_cfg.py accordingly.
    
*** Step3: Perform alignment 
    - Use bin/EB_Alignment_RotoTraslation_singleSM.cpp (or bin/EB_Alignment_RotoTraslation.cpp) and bin/EE_Alignment_RotoTraslation_singleSM.cpp (or bin/EE_Alignment_RotoTraslation.cpp) scripts to perform alignment. 
    - Output of these scripts are two text files containing values of alignment coefficients (∆x, ∆y, ∆z) for each SM and Dee.
    
*** Step4: Validate the alignment results
    - [[file:bin/CombineRotoTraslations.cpp][Combine]] the new alignment coefficients text file with the old one.
    - Perform RE-RECO of the data.
    - [[file:bin/drawSingleModule.cpp][Plot]] ∆η and ∆φ distributions to see if the alignment has resulted in better agreement between data and MC.


See the readme in other subdirectories (test,plot,crab etc.) for more information!
